name: Weekly Session Sync

on:
  schedule:
    # Runs every Friday at 1:00 AM (UTC)
    - cron: '0 1 * * 5'
  workflow_dispatch: # Allow manual triggering for testing

jobs:
  sync-session:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for branch comparison
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Check for new sessions
        id: check_sessions
        run: |
          # Fetch all branches
          git fetch origin dev prod
          
          # Get session files from dev and prod branches
          DEV_SESSIONS=$(git ls-tree -r origin/dev --name-only | grep "^02-SESSIONS/session-[0-9]\+-" | sort)
          PROD_SESSIONS=$(git ls-tree -r origin/prod --name-only | grep "^02-SESSIONS/session-[0-9]\+-" | sort)
          
          # Always find the highest session number in dev branch (excluding session-0)
          # Extract session numbers, filter out session-0, and find the max
          SESSION_COUNT=$(echo "$DEV_SESSIONS" | grep -oE 'session-[0-9]+' | grep -oE '[0-9]+' | grep -v '^0$' | sort -n | tail -1)
          
          # If no sessions found (shouldn't happen), default to 1
          if [ -z "$SESSION_COUNT" ]; then
            SESSION_COUNT=1
          fi
          
          echo "session_count=$SESSION_COUNT" >> $GITHUB_OUTPUT
          
          # Check if there are new sessions in dev
          NEW_SESSIONS=$(comm -23 <(echo "$DEV_SESSIONS") <(echo "$PROD_SESSIONS"))
          
          if [ -z "$NEW_SESSIONS" ]; then
            echo "No new sessions found"
            echo "has_new_sessions=false" >> $GITHUB_OUTPUT
          else
            echo "New sessions found:"
            echo "$NEW_SESSIONS"
            echo "has_new_sessions=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Update README and sync branches
        if: steps.check_sessions.outputs.has_new_sessions == 'true'
        run: |
          set -e # Exit on any error
          # Checkout dev branch
          git checkout dev
          
          # Update the session badge in README.md
          SESSION_COUNT=${{ steps.check_sessions.outputs.session_count }}
          sed -i "s/\[\!\[Last Vigil\](https:\/\/img\.shields\.io\/badge\/Last_Vigil-Session_[0-9]*-grey\.svg)\]/[![Last Vigil](https:\/\/img.shields.io\/badge\/Last_Vigil-Session_${SESSION_COUNT}-grey.svg)]/" README.md
          
          # Commit the change
          git add README.md
          git commit -m "Update session badge to Session ${SESSION_COUNT}"
          
          # Push to dev
          git push origin dev
          
          # Checkout prod and merge dev
          git checkout prod
          git pull origin prod
          git merge dev -m "Weekly session sync: Session ${SESSION_COUNT}"
          
          # Push to prod
          git push origin prod
          
      - name: Summary
        if: always()
        run: |
          if [ "${{ steps.check_sessions.outputs.has_new_sessions }}" == "true" ]; then
            echo "‚úÖ Session sync completed successfully!"
            echo "üìä Updated to Session ${{ steps.check_sessions.outputs.session_count }}"
            echo "üöÄ dev branch merged to prod"
          else
            echo "‚ÑπÔ∏è No new sessions found - no sync needed"
          fi
      
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® Weekly Session Sync Failed',
              body: `The weekly session sync workflow failed on ${new Date().toISOString()}.
              
              **Workflow run:** ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
              
              Please check the logs and resolve any merge conflicts or errors.`,
              labels: ['automation', 'error']
            })